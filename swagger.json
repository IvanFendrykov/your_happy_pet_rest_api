{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Your Pets",
    "description": "",
    "license": {
      "name": "Swagger UI Express Documentation",
      "url": "https://www.npmjs.com/package/swagger-ui-express"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "https://happy-pets-rest-api.onrender.com" },
    { "url": "http://localhost:3001" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Pets",
      "description": "Endpoints for user's pets"
    },
    {
      "name": "Notices",
      "description": "Endpoints for notices managing"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Friends",
      "description": "Friends endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register new user",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in a user",
        "requestBody": {
          "description": "Log in existing user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
          "tags": ["Auth"],
          "summary": "Get current user",
          "security": [{ "Bearer": [] }],
          "responses": {
              "200": {
                  "description": "Current user retrieved successfully",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/GetCurrentUserResponse"
                          }
                      }
                  }
              },
              "401": {
                  "description": "Not authorized"
              }
          }
      }
  },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log out of the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },

    "/api/myPet": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add user's pet",
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Information about the pet was published",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400, `The file is not loaded/The text fields are not filled in"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["Pets"],
        "summary": "Add user's pet",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string",
            "description": "Count of articles per page. Default 12."
          }
        ],

        "responses": {
          "200": {
            "description": "Information about the pet was published",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400, `The file is not loaded/The text fields are not filled in"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/myPet/:petId": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete the pet by id",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Information about the pet was published",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetsResponse"
                }
              }
            }
          },
          "204": {
            "description": "Delete success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Adding a notices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostNoticeResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notices found for given category",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Notices"],
        "summary": "Get all notices ",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string",
            "description": "Count of articles per page. Default 12."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostNoticeResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No notices found for given category",
            "content": {}
          }
        }
      }
    },
    "/api/notices/search/search{title}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by search of title",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string",
            "description": "Count of articles per page. Default 12."
          },
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string",
            "description": "The query for search"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostNoticeResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all favorite",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string",
            "description": "Count of articles per page. Default 12."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostNoticeResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/favorite/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all favorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostNoticeResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/{id}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete the pet by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the pet was published",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetsResponse"
                }
              }
            }
          },
          "204": {
            "description": "Delete success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/{id}/favorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Toogle: Delete and add to user model in favorite ",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the pet was published",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPetsResponse"
                }
              }
            }
          },
          "204": {
            "description": "Delete success"
          },

          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/my/adds": {
      "get": {
        "tags": ["Notices"],
        "summary": "Delete the pet by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string",
            "description": "Count of articles per page. Default 12."
          }
        ],
        "responses": {
          "200": {
            "description": "Take those that I added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetsResponse"
                }
              }
            }
          },
          "204": {
            "description": "Delete success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "News about pets",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "number",
            "description": "Page number for pagination. Default 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "number",
            "description": "Count of articles per page. Default 6."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/news/search/:key": {
      "get": {
        "tags": ["News"],
        "summary": "Find news by key words",
        "parameters": [
          {
            "in": "query",
            "name": "request",
            "required": true,
            "type": "string",
            "description": "Page number for pagination. Default 1.",
            "example": "Cat"
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "number",
            "description": "Page number for pagination. Default 1."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "No match for your search"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/ourfriends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Our Friends",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFriendsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PostNoticeResponse": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Notices category"
          },
          "name": {
            "type": "string",
            "description": "Pet's name"
          },
          "title": {
            "type": "string",
            "description": "Pet's title"
          },
          "birthDay": {
            "type": "string",
            "description": "Pet's birthDay"
          },
          "typeOfPet": {
            "type": "string",
            "description": "type of pet"
          },
          "gender": {
            "type": "string",
            "description": "gender of pet"
          },
          "image": {
            "type": "string",
            "description": "Pet's image url"
          },
          "location": {
            "type": "string",
            "description": "location about pet"
          },
          "comments": {
            "type": "string",
            "description": "comments about pet"
          },
          "owner": {
            "type": "string",
            "description": "pet's owner"
          },
          "_id": {
            "type": "string",
            "description": "pet's id"
          }
        },
        "example": {
          "category": "Notices category",
          "name": "Jumba",
          "title": "Umba",
          "birthday": "2019-04-03T21:00:00.000Z",
          "typeOfPet": "domestic cat",
          "gender": "Male",
          "image": "https://res.cloudinary.com/dgei1ulzc/image/upload/v1684017393/ryt2sd2jixhzisfzubvv.jpg",
          "comments": "Jumba Umba",
          "owner": "645f8849927886006f9a291",
          "_id": "646010f2da84cd379a718d04"
        }
      },
      "GetPetsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name"
          },
          "birthDay": {
            "type": "string",
            "description": "Pet's birthDay"
          },
          "typeOfPet": {
            "type": "string",
            "description": "type of pet"
          },
          "image": {
            "type": "string",
            "description": "Pet's image url"
          },
          "comments": {
            "type": "string",
            "description": "comments about pet"
          },
          "owner": {
            "type": "string",
            "description": "pet's owner"
          },
          "_id": {
            "type": "string",
            "description": "pet's id"
          }
        },
        "example": {
          "name": "Jumba",
          "birthDay": "2019-04-03T21:00:00.000Z",
          "typeOfPet": "domestic cat",
          "comments": "Jumba Umba",
          "owner": "645f8849927886006f9a291",
          "image": "https://res.cloudinary.com/dgei1ulzc/image/upload/v1684017393/ryt2sd2jixhzisfzubvv.jpg",
          "_id": "646010f2da84cd379a718d04"
        }
      },

      "PostPetsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name"
          },
          "birthDay": {
            "type": "string",
            "description": "Pet's birthDay"
          },
          "typeOfPet": {
            "type": "string",
            "description": "type of pet"
          },
          "image": {
            "type": "string",
            "description": "Pet's image url"
          },
          "comments": {
            "type": "string",
            "description": "comments about pet"
          },
          "owner": {
            "type": "string",
            "description": "pet's owner"
          },
          "_id": {
            "type": "string",
            "description": "pet's id"
          }
        },
        "example": {
          "name": "Jumba",
          "birthday": "2019-04-03T21:00:00.000Z",
          "typeOfPet": "domestic cat",
          "comments": "Jumba Umba",
          "owner": "645f8849927886006f9a291",
          "image": "https://res.cloudinary.com/dgei1ulzc/image/upload/v1684017393/ryt2sd2jixhzisfzubvv.jpg",
          "_id": "646010f2da84cd379a718d04"
        }
      },
      "DeletePetsResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 204
          },
          "status": {
            "type": "string",
            "example": "Delete success"
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "alina"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "alina@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "nirodalina123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "alina"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "alina@gmail.com"
          },
          "token": {
            "type": "string",
            "description": "User's token"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "username": {},
              "email": {}
            }
          }
        }
      },
      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "alina"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "alina@gmail.com"
          },
          "phone": {
             "type": "string",
             "description": "User's phone",
             "example": "380506679812"
          },
          "birthDay": {
            "type": "string",
            "description": "User's birthDay",
            "example": "2023-11-05T22:00:00.000+00:00"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "profilePic": {
            "type": "string",
            "description": "User's image",
            "example": "http://res.cloudinary.com/delzhfsor/image/upload/v1701286043/htj2iixrrxiw8bqltutg.png "
          }
        }
      },
      "GetUserInfoResponse": {
        "type": "object",
        "properties": {}
      },

      "SearchNoticesResponse": {
        "type": "object",
        "properties": {}
      },

      "GetNewsRequest": {
        "type": "object",
        "required": ["request"],
        "propetries": {
          "request": {
            "type": "string",
            "description": "request for search",
            "example": "Cat"
          }
        }
      },

      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id of element",
              "example": "5gfw3jsdf554tdfgj"
            },
            "imgUrl": {
              "type": "string",
              "description": "Url for news image",
              "example": "https://ibb.co/Rck62YB"
            },
            "title": {
              "type": "string",
              "description": "Title of news",
              "example": "What I Learned Dogsitting for New York City’s Opulent Elite"
            },
            "text": {
              "type": "string",
              "description": "Content of news",
              "example": "In a city of yawning class inequality, some side hustles let you glimpse how the other half lives."
            },
            "date": {
              "type": "string",
              "description": "The date of creation of the news",
              "example": "2023-04-11T09:00:18+0000"
            },
            "url": {
              "type": "string",
              "description": "Url to the news source ",
              "example": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html"
            },
            "id": {
              "type": "string",
              "description": "Url to the news source",
              "example": "nyt://article/8d29f1fc-d146-509d-8ceb-5a5b17d7886b"
            }
          }
        }
      },

      "GetFriendsResponse": {}
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
